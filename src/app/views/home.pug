include layout/navigation

div.home-container('fxLayout'='column')
  mat-card
    div('fxFlex')
      mat-form-field
        mat-select#code_system_select("name"="code_system_select", "placeholder"="Code System", "[(ngModel)]"="codeSystem", "(change)"="codeSystemChanged()")
          mat-option("*ngFor"="let cs of codeSystems", "[value]"="cs") {{cs.name}} ({{cs.version}}
    div('fxFlex')
      div('fxLayout'='row')
        div('fxFlex'="90")
          mat-form-field.autocomplete-custom-width
            //input('matInput'="" width="100%" autofocus="true" type="search" "[(ngModel)]"='searchFilter' name="search_text" "(keyup)"="search()" placeholder="Search by name, code, or ID...")
            //button('mat-button'="" type='submit' "[disabled]"="!validSearch()" "(click)"="search()")
            //  span.fa.fa-search
            //  |  Search
            input('matInput'="", placeholder="Search for a term by code, name, or ID...", aria-label="Code Search", '[formControl]'="codeSearchInput", '[matAutocomplete]'="auto", '[(ngModel)]'="codeSearchString", name="auto" required)
            mat-autocomplete('#auto'="matAutocomplete", '(optionSelected)'="resultSelected($event)", '[displayWith]'="codeSearchInputDisplay")
              mat-option('*ngFor'="let option of searchResults", '[value]'="option") {{ option.display }} - {{option.code}}
        div('fxFlex'="10")
          mat-form-field
            mat-select#result_limit("name"='result_limit', "[(ngModel)]"="resultLimit", "placeholder"="Limit Results To")
              mat-option("*ngFor"="let l of getLimits()", "[value]"="l") {{l}}
      div('fxLayout'='row', "*ngIf"="results && results.expansion?.contains")
        div('fxFlex', class="")
          mat-slide-toggle('(change)'='chartTypeToggled($event)','[checked]'="graphType ==='3D'") 3D
        div('fxFlex', class="legend-container")
          svg(class='legend-node', 'height'="20" 'width'="20")
            circle(cx="10" cy="10" r="9" stroke-width="3" fill="rgb(31, 119, 180)")
          div Current Term
          svg(class='legend-node','height'="20" 'width'="20")
            circle(cx="10" cy="10" r="9" stroke-width="3" fill="rgb(255, 127, 14)")
          div Parent
          svg(class='legend-node','height'="20" 'width'="20")
            circle(cx="10" cy="10" r="9" stroke-width="3" fill="rgb(44, 160, 44)")
          div Child
// For when a search has been completed, but there are zero results.
div.home-container('fxLayout'='column', '*ngIf'="results && results.expansion?.contains == null")
  div('fxFlex')
    mat-card No results!


div.home-container('fxLayout'='column', "*ngIf"="results && results.expansion?.contains")
    div('fxFlex', "*ngIf"="valueSet && valueSetParameters")
      code-visualizer("[valueSet]"="valueSet",
      "[valueSetParameters]"="valueSetParameters",
      "[codeSystem]"="codeSystem",
      '(onSelection)'='nodeClicked($event)')
div.home-container('*ngIf'="valueSetParameters")
  mat-card
    div('fxLayout'='row')
      div('fxFlex'="40")
        h4 Properties
        mat-table('#table', '[dataSource]'="valueSetParameters.properties")
          ng-container('matColumnDef'="code")
            mat-header-cell('*matHeaderCellDef'="") Code
            mat-cell('*matCellDef'="let property") {{property.code}}
          ng-container('matColumnDef'="value")
            mat-header-cell('*matHeaderCellDef'="") Value
            mat-cell('*matCellDef'="let property") {{partValue(property)}}
          mat-header-row('*matHeaderRowDef'="propertyTableHeader")
          mat-row('*matRowDef'="let row; columns: propertyTableHeader;")
      div('fxFlex'="60")
        h4 Designations
        mat-table('#table', '[dataSource]'="valueSetParameters.designations")
          ng-container('matColumnDef'="value")
            mat-header-cell('*matHeaderCellDef'="") Value
            mat-cell('*matCellDef'="let designation") {{partValue(designation)}}
          ng-container('matColumnDef'="use")
            mat-header-cell('*matHeaderCellDef'="") Use
            mat-cell('*matCellDef'="let designation")
              | {{designation['use']['code']}}
              | ({{designation['use']['display']}})
              br
              i {{designation['use']['system']}}
          ng-container('matColumnDef'="language")
            mat-header-cell('*matHeaderCellDef'="") Language
            mat-cell('*matCellDef'="let designation") {{designation.language}}
          mat-header-row('*matHeaderRowDef'="designationTableHeader")
          mat-row('*matRowDef'="let row; columns: designationTableHeader;")

div.home-container("*ngIf"="codeSystem")
  mat-card
    div('fxLayout'='row')
      div('fxFlex')
        h2 &nbsp;{{codeSystem.name}}
          hr
    div('fxLayout'='row')
      div('fxFlex'="50")
          mat-list
            mat-list-item
              p('mat-line')
                b Version
              p('mat-line') {{codeSystem.version}}
            mat-list-item
              p('mat-line')
                b Name
              p('mat-line') {{codeSystem.name}}
            mat-list-item
              p('mat-line')
                b Status
              p('mat-line') {{codeSystem.status}}
            mat-list-item
              p('mat-line')
                b Experimental
              p('mat-line') {{codeSystem.experimental}}
            mat-list-item
              p('mat-line')
                b Date
              p('mat-line') {{codeSystem.date}}
            mat-list-item
              p('mat-line')
                b Publisher
              p('mat-line') {{codeSystem.publisher}}
            mat-list-item
              p('mat-line')
                b Copyright
              p('mat-line') {{codeSystem.copyright}}
      div('fxFlex'="50")
        mat-list
          mat-list-item
            p('mat-line')
              b Description
            p('mat-line') {{codeSystem.description}}
          mat-list-item
            p('mat-line')
              b Case Sensitive
            p('mat-line') {{codeSystem.caseSensitive}}
          mat-list-item
            p('mat-line')
              b Value Set
            p('mat-line') {{codeSystem.valueSet}}
          mat-list-item
            p('mat-line')
              b Hierarchy Meaning
            p('mat-line') {{codeSystem.hierarchyMeaning}}
          mat-list-item
            p('mat-line')
              b Compositional
            p('mat-line') {{codeSystem.compositional}}
          mat-list-item
            p('mat-line')
              b Version Needed?
            p('mat-line') {{codeSystem.versionNeeded}}
          mat-list-item
            p('mat-line')
              b Content
            p('mat-line') {{codeSystem.content}}
include layout/footer
